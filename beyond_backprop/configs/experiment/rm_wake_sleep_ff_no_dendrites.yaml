# @package _global_

# to execute this experiment run:
# python main.py experiment=rm_wake_sleep_no_dendrites

defaults:
  - override /datamodule: mnist
  - override /algorithm: rm_wake_sleep
  - override /network: fcwsmodel
  - override /trainer: default
  - override /trainer/callbacks: no_checkpoints

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

seed: 12345

trainer:
  min_epochs: 50
  max_epochs: 50
  profiler: null
  fast_dev_run: False
  overfit_batches: 0
  limit_val_batches: 0.
  limit_test_batches: 1.
  limit_train_batches: 1.
  track_grad_norm: -1
  detect_anomaly: true
  enable_checkpointing: True

  callbacks:
    generative_sample:
      _target_: beyond_backprop.algorithms.wake_sleep.callbacks.GenerativeSamples
    inf_gen_loss_record:
      _target_: beyond_backprop.algorithms.wake_sleep.callbacks.InfGenLossRecord
    apical_basal_alignment:
      _target_: beyond_backprop.algorithms.wake_sleep.callbacks.ApicalBasalAlignment
    dynamic_mixed_samples:
      _target_: beyond_backprop.algorithms.wake_sleep.callbacks.DynamicMixedSampler
algorithm:
  forward_optimizer:
    lr: 0.001
    weight_decay: 0.
    betas: [0.9, 0.999]
  backward_optimizer:
    lr: 0.001
    weight_decay: 0.
    betas: [0.9, 0.999]
  class_optimizer:
    lr: 0.001
    weight_decay: 0
    betas: [0.9, 0.999]
  reward_temp: 0.01
  burn_in_time: 0
  wake_phase_length: 200
  sleep_phase_length: 200
  sleep_phase_number: 100000
  wake_loss_ratio: 1.0
  hallucination_mode: 'interp'
  
network:
  layer_widths:  [32, 16, 6]
  batch_norm: True
  dendrites: False
  input_shape:  [1, 28, 28]
  sigma_inf: 0.01
  sigma_gen: 0.01
  batch_size: 512
  n_classes: 10

datamodule:
  batch_size: 512
  normalize: True
  drop_last: True
  
name: "${hydra:runtime.choices.algorithm}-${hydra:runtime.choices.network}-${hydra:runtime.choices.datamodule}"