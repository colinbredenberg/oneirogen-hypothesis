# @package _global_

# to execute this experiment run:
# python main.py experiment=example

defaults:
  - override /datamodule: mnist
  - override /algorithm: vae
  - override /network: ladder_vaefcnet
  - override /trainer: default
  - override /trainer/callbacks: no_checkpoints

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

seed: 12345

trainer:
  min_epochs: 5
  max_epochs: 5
  # prints
  profiler: null
  # debugs
  fast_dev_run: False
  overfit_batches: 0
  limit_val_batches: 0.
  limit_test_batches: 1.
  limit_train_batches: 1.
  track_grad_norm: -1
  detect_anomaly: true
  enable_checkpointing: True

  callbacks:
    generative_sample:
      _target_: beyond_backprop.algorithms.wake_sleep.callbacks.GenerativeSamples
    inf_gen_loss_record:
      _target_: beyond_backprop.algorithms.wake_sleep.callbacks.LossRecord
    mixing_sample:
      _target_: beyond_backprop.algorithms.wake_sleep.callbacks.MixingSampler
    closed_eyes:
      _target_: beyond_backprop.algorithms.wake_sleep.callbacks.ClosedEyes
    # apical_basal_alignment:
    #   _target_: beyond_backprop.algorithms.wake_sleep.callbacks.ApicalBasalAlignment
    # distribution_comparisons:
    #   _target_: beyond_backprop.algorithms.wake_sleep.callbacks.DistributionComparisons
    # whitening_quant:
    #   _target_: beyond_backprop.algorithms.wake_sleep.callbacks.WhiteningQuant
    # weight_visualization:
    #   _target_: beyond_backprop.algorithms.wake_sleep.callbacks.WeightVisualizations
    # plasticity_quant:
    #   _target_: beyond_backprop.algorithms.wake_sleep.callbacks.PlasticityQuant
    # stimulus_conditioned_variance:
    #   _target_: beyond_backprop.algorithms.wake_sleep.callbacks.StimulusConditionedVariance
algorithm:
  forward_optimizer:
    lr: 0.001
    weight_decay: 0.
    betas: [0.9, 0.999]
  backward_optimizer:
    lr: 0.001
    weight_decay: 0.
    betas: [0.9, 0.999]
  
network:
  layer_widths: [512, 256, 2]
  input_shape:  [1, 28, 28]
  sigma_inf: 0.01
  sigma_gen: 0.01
  batch_size: 128
  differentiable: False

datamodule:
  batch_size: 128
  normalize: True
  # version: "2021_train_mini"
  drop_last: True #this is necessary for wake-sleep generative models for now
  
name: "${hydra:runtime.choices.algorithm}-${hydra:runtime.choices.network}-${hydra:runtime.choices.datamodule}"